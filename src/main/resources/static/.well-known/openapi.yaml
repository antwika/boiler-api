openapi: 3.0.4
info:
  title: Boiler API
  version: 0.0.1
servers:
  - url: http://localhost:8080/v0
paths:
  /api-info:
    get:
      summary: Get api information
      operationId: getApiInfoOperation
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiInfoModel"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  /resources:
    get:
      summary: Get all resources
      operationId: getResourcesOperation
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResourceModel"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    post:
      summary: Create resource
      operationId: postResourceOperation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceModel"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceModel"
  /resources/{id}:
    get:
      summary: Get a resource
      operationId: getResourceOperation
      parameters:
        - name: id
          in: path
          description: ID of resource
          required: true
          schema:
            $ref: "#/components/schemas/Uuid"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceModel"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    delete:
      summary: Delete a resource
      operationId: deleteResourceOperation
      parameters:
        - name: id
          in: path
          description: ID of resource
          required: true
          schema:
            $ref: "#/components/schemas/Uuid"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceModel"
components:
  schemas:
    Uuid:
      description: UUID Version 4
      type: string
      maxLength: 36
      format: uuid
      readOnly: true
    ApiInfoModel:
      type: object
      required:
        - apiName
        - apiVersion
        - apiReleased
        - apiDocumentation
        - apiStatus
      properties:
        apiName:
          type: string
        apiVersion:
          type: string
        apiReleased:
          type: string
        apiDocumentation:
          type: string
        apiStatus:
          type: string
    ResourceModel:
      type: object
      required:
        - id
        - name
        - created
        - updated
      properties:
        id:
          $ref: "#/components/schemas/Uuid"
        name:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
    ErrorModel:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
